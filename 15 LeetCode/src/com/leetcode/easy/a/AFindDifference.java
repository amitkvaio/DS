package com.leetcode.easy.a;

import java.util.HashMap;
//1
public class AFindDifference {
	
	public static void main(String[] args) {
		String s = "abcd", t = "abcde"; //Output : e
		//String s = "", t = "y"; //Output y
		char chmap = findDifferenceUsingMap(s, t);
		System.out.println("Using Map ::" + chmap);
		
		char chSum = findTheDifferenceUsingSum(s, t);
		System.out.println("Using Sum ::"+ chSum);
		
		char ch = findTheDifferenceUsingXOR(s, t);
		System.out.println("Using Xor ::" + ch);
		
		
	}
	
	//Approach-1
	//T.C : Linear
	//S.C : Extra space map
	public static char findDifferenceUsingMap(String s, String t) {
		HashMap<Character, Integer> map = new HashMap<Character, Integer>();
		for (char ch : s.toCharArray()) {
			map.put(ch, map.getOrDefault(ch, 0) + 1);
		}
		
		for (char ch : t.toCharArray()) {
			map.put(ch, map.getOrDefault(ch, 0) - 1);
			if(map.get(ch) < 0 ) {
				return ch;
			}
		}
		//sending any random character, it will never reach here.
		return 'a';
	}
	
	//Approach-2 (Using Sum Difference)
	//T.C : Lines
	//S.C : constant
	
	public static char findTheDifferenceUsingSum(String s, String t) {
		int sum = 0;

		for (char ch : t.toCharArray())
			sum += ch;

		for (char ch : s.toCharArray())
			sum -= ch;

		return (char) sum;
	}
	
	
	//Approach-3 (Using XOR property)
	//T.C : Linear
	//S.C : constant
	public static char findTheDifferenceUsingXOR(String s, String t) {
        int xor = 0;
        for(char ch : s.toCharArray())
            xor = xor ^ ch;

        for(char c : t.toCharArray())
            xor = xor ^ c;
        
        return (char)xor;
    }
}



/*

389. Find the Difference

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:

Input: s = "", t = "y"
Output: "y"

 

Constraints:

    0 <= s.length <= 1000
    t.length == s.length + 1
    s and t consist of lowercase English letters.

*/